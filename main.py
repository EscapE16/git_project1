import os
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.enums import ParseMode


TOKEN = '7774939080:AAH4BB8qhexRBNK7h5aRRyVNn08YeWiSYO0'
WEATHER_API_KEY = 'd13df17617fb572a9b47fa839e1ae33a'

bot = Bot(TOKEN)
dp = Dispatcher()


async def get_weather(city: str) -> str:
    try:
        api_key = WEATHER_API_KEY
        if not api_key:
            return "–û—à–∏–±–∫–∞: API-–∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω."

        city_encoded = city.strip().replace(" ", "%20")
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city_encoded}&appid={api_key}&units=metric&lang=ru"

        response = requests.get(url)
        data = response.json()

        print("–û—Ç–≤–µ—Ç API:", data)  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—É–¥–∞–ª–∏—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ)

        if "cod" in data and data["cod"] == 200:
            weather = (
                f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {data['name']}:\n"
                f"‚û° {data['weather'][0]['description'].capitalize()}\n"
                f"üå° {data['main']['temp']}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {data['main']['feels_like']}¬∞C)\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {data['main']['humidity']}%\n"
                f"üå¨ –í–µ—Ç–µ—Ä: {data['wind']['speed']} –º/—Å"
            )
            return weather
        else:
            error_msg = data.get("message", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ API")
            return f"–û—à–∏–±–∫–∞: {error_msg}. –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞: '–ú–æ—Å–∫–≤–∞' –∏–ª–∏ 'New York'"

    except Exception as e:
        print("–û—à–∏–±–∫–∞ –≤ get_weather:", e)
        return "–°–µ—Ä–≤–∏—Å –ø–æ–≥–æ–¥—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."


@dp.message(Command("start"))
async def start_command(message: Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É.\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã."
    )


@dp.message(Command("help"))
async def help_command(message: Message):
    await message.answer(
        "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:\n"
        "1. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ú–æ—Å–∫–≤–∞)\n"
        "2. –ë–æ—Ç –≤–µ—Ä–Ω–µ—Ç —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ\n\n"
        "–ö–æ–º–∞–Ω–¥—ã:\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    )


@dp.message()
async def get_city_weather(message: Message):
    city = message.text
    weather = await get_weather(city)
    await message.answer(weather, parse_mode=ParseMode.MARKDOWN)


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    import asyncio

    asyncio.run(main())